rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             request.auth.token.email == 'morgan.rotich@tarielectra.africa';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Blog posts - PUBLIC READ for Vercel build
    match /blogs/{blogId} {
      allow read: if true; // Public read access for static generation
      allow write: if isAdmin();
    }
    
    // Blog subscribers - PUBLIC READ for build, authenticated write
    match /blogSubscribers/{email} {
      allow read: if true; // Allow read for build process
      allow create: if true; // Allow anyone to subscribe
      allow update, delete: if isAdmin();
    }
    
    // Products - Public read, Admin write
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Customer Products - Public read, Admin write
    match /customerProducts/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Homepage Products - Public read, Admin write
    match /homepageProducts/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Orders - User can read/create own, Admin can read/write all
    match /orders/{orderId} {
      allow read: if isAdmin() || isOwner(resource.data.customerId);
      allow create: if isAuthenticated() && isOwner(request.resource.data.customerId);
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Customers - User can read/write own, Admin can read all
    match /customers/{customerId} {
      allow read, write: if isOwner(customerId) || isAdmin();
    }
    
    // Carts - User can read/write own only
    match /carts/{customerId} {
      allow read, write: if isOwner(customerId);
    }
    
    // Submeter Applications - User can create/read own, Admin can read/write all
    match /submeterApplications/{applicationId} {
      allow read: if isAdmin() || isOwner(resource.data.userId);
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Contact messages - PUBLIC CREATE, Admin read/write
    match /contactMessages/{messageId} {
      allow create: if true; // Allow anyone to send contact messages
      allow read, update, delete: if isAdmin();
    }
    
    // Homepage settings - PUBLIC READ for build, Admin write
    match /homepageSettings/{settingId} {
      allow read: if true; // Public read for static generation
      allow write: if isAdmin();
    }
    
    // Stock Alerts - Admin only
    match /stockAlerts/{alertId} {
      allow read, write: if isAdmin();
    }
    
    // Admin-only collections
    match /adminSettings/{document} {
      allow read, write: if isAdmin();
    }
    
    // User profiles/settings
    match /userProfiles/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    // Catch-all: Deny access to any other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}